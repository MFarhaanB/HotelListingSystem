@model IEnumerable<HotelListingSystem.Models.Hotel>

@{
    ViewBag.Title = "HotelPayment";
}

<h2>HotelPayment</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.HotelUser.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsVerified)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.PaymentPaid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaymentDoneDate)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr class="hotel-row">
        <td>
            @Html.HiddenFor(model => item.Id)
            @Html.DisplayFor(modelItem => item.HotelUser.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaxOccupancy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsVerified)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rating)
        </td>
        <th>
            @Html.EditorFor(modelItem => item.PaymentPaid)
        </th>
        <th>
            @Html.EditorFor(modelItem => item.DueDate, new { @class = "datepicker" })
        </th>
        <th>
            @Html.EditorFor(modelItem => item.PaymentDoneDate, new {@class= "datepicker" })
        </th>
        <td>
            <button type="button" class="btn btn-primary" id="hotel_@item.Id" onclick="UpdateHotel(@item.Id)">Update</button>
            <br />
            @if (item?.Blacklisted == true)
            {
                <button type="button" class="btn btn-danger"> Hotel Blacklisted </button>
            }
            else
            {
                <button type="button" class="btn btn-primary" id="hotel_@item.Id" onclick="BlacklistHotel(@item.Id)"> Blacklist </button>
            }
        </td>
    </tr>
}

</table>

<script>
            // Initialize datepickers
        $(function () {
            var currentDate = new Date();
            $('.datepicker').datepicker({
                minDate: currentDate // Restrict check-in date to be on or after the current date
            });
        });

    function UpdateHotel(hotelId) {
        // Get the data from the table row
        var paymentPaid = $('.hotel-row[data-hotel-id="' + hotelId + '"] input[name="PaymentPaid"]').val();
        var dueDate = $('.hotel-row[data-hotel-id="' + hotelId + '"] input[name="DueDate"]').val();
        var paymentDoneDate = $('.hotel-row[data-hotel-id="' + hotelId + '"] input[name="PaymentDoneDate"]').val();

        // Prepare the data to be sent to the controller
        var data = {
            Id: hotelId,
            PaymentPaid: paymentPaid,
            DueDate: dueDate,
            PaymentDoneDate: paymentDoneDate
        };

        // Send the data to the controller using AJAX
        $.ajax({
            url: '/Hotels/UpdateHotel', // Replace with your controller's action method URL
            type: 'POST', // Use POST or GET depending on your requirements
            dataType: 'json', // Set the data type to JSON if needed
            data: data,
            success: function (response) {
                // Handle success response from the controller
                // Update UI or perform other actions as needed
                console.log(response);
                alert(response);
            },
            error: function (xhr, status, error) {
                // Handle error response from the controller
                // Display error message or perform other actions as needed
                console.error(xhr.responseText);
                alert(xhr.responseText);
            }
        });
    }
    function BlacklistHotel(id) {
        $.ajax({
            url: '/Hotels/BlacklistHotel', // Replace with your controller's action method URL
            type: 'POST', // Use POST or GET depending on your requirements
            dataType: 'json', // Set the data type to JSON if needed
            data: data,
            success: function (response) {
                // Handle success response from the controller
                // Update UI or perform other actions as needed
                console.log(response);
                alert(response);
            },
            error: function (xhr, status, error) {
                // Handle error response from the controller
                // Display error message or perform other actions as needed
                console.error(xhr.responseText);
                alert(xhr.responseText);
            }
        });
    }
</script>